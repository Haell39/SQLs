--create database ComércioEletrônicoTest;
--create table cliente(
--Id_cliente int not null,
--Nome varchar(50) not null,
--CPF char(11)  unique not null,
--Email varchar(50) unique not null, 
--Endereco varchar(50) not null,
--primary key(Id_cliente)
--);
--insert into cliente 
--(Id_cliente, Nome, CPF, Email, Endereco)
--values
--(100 , 'Marcelo Azevêdo da Silva'    , '32145698764' , 'marceloazvd@email.com'  , 'Pernambuco'),
--(110 , 'Filipe Pereira dos Santos'   , '21356521332' , 'lipepereira@email.com'  , 'Piauí'),
--(120 , 'Andrade Santos de Oliveira'  , '43213232143' , 'andradests@email.com'   , 'São Paulo'),
--(130 , 'Cyrillo Cavalcanti dos Reis' , '65443223678' , 'cyrillocli@email.com'   , 'Rio de Janeiro'),
--(140 , 'José Santos Lima'            , '41254323454' , 'josesantos@email.com'   , 'Minas Gerais'),
--(150 , 'João Victor Almeida'         , '65476587634' , 'joãovictor@email.com'   , 'Ceará');
--create table NFC(
--Id_NFC int not null,
--Id_cliente int not null,
--DataPedido date not null,
--Descricao varchar(100),
--primary key(Id_NFC),
--foreign key(Id_cliente) references cliente(Id_cliente)
--);
--insert into NFC 
--(Id_NFC, Id_Cliente, DataPedido, Descricao)
--values
--(400 , 100 , '20/03/2024' , 'Compra de um iPhone 15 feita por Marcelo Azevedo da Silva'), 
--(410 , 110 , '15/04/2024' , 'Compra de uma Mesa Gamer feita por Filipe Pereira dos Santos'),
--(420 , 120 , '02/05/2024' , 'Compra de um Tênis Esportivo feita por Andrade Santos de Oliveira'),
--(430 , 130 , '27/05/2024' , 'Compra de um Kit de Ferramentas feita por Cyrillo Cavalcanti dos Reis'),
--(440 , 140 , '14/06/2024' , 'Compra de um Biscoito Oreo feita por José Santos Lima'),
--(450 , 150 , '23/07/2024' , 'Compra de um Kit de Camisas feita por João Victor Almeida'),
--(460 , 100 , '25/03/2024' , 'Compra de um MacBook Pro feita por Marcelo Azevedo da Silva'),
--(470 , 110 , '18/04/2024' , 'Compra de uma Cadeira Gamer feita por Filipe Pereira dos Santos'),
--(480 , 120 , '06/05/2024' , 'Compra de um Relógio Esportivo feita por Andrade Santos de Oliveira'),
--(490 , 130 , '30/05/2024' , 'Compra de uma Furadeira feita por Cyrillo Cavalcanti dos Reis'),
--(500 , 100 , '10/08/2024' , 'Compra de um Notebook Dell feita por Marcelo Azevedo da Silva'), 
--(510 , 110 , '22/08/2024' , 'Compra de uma Cadeira Ergonomica feita por Filipe Pereira dos Santos'),
--(520 , 120 , '05/09/2024' , 'Compra de uma Mochila Esportiva feita por Andrade Santos de Oliveira'),
--(530 , 130 , '18/09/2024' , 'Compra de uma Furadeira Bosch feita por Cyrillo Cavalcanti dos Reis'),
--(540 , 140 , '28/09/2024' , 'Compra de um Café Gourmet feita por José Santos Lima'),
--(550 , 150 , '02/10/2024' , 'Compra de um Relógio Digital feita por João Victor Almeida');
--create table pagamento(
--Cd_Pagamento int not null,
--Id_NFC int not null,
--Data date not null,
--Valor money not null check (Valor >= 0),
--primary key(Cd_Pagamento),
--foreign key(Id_NFC) references NFC(Id_NFC)
--);
--insert into pagamento (Cd_Pagamento, Id_NFC, Data, Valor)
--values
--(50 , 400 , '21/03/2024' , 5600.00),                  
--(51 , 410 , '16/04/2024' , 650.00),
--(52 , 420 , '03/05/2024' , 250.00),
--(53 , 430 , '28/05/2024' , 120.00),
--(54 , 440 , '15/06/2024' , 30.00),
--(55 , 450 , '24/07/2024' , 110.00),
--(56 , 460 , '26/03/2024' , 9000.00),
--(57 , 470 , '19/04/2024' , 800.00),
--(58 , 480 , '07/05/2024' , 500.00),
--(59 , 490 , '31/05/2024' , 150.00),
--(60 , 500 , '11/08/2024' , 3500.00),
--(61 , 510 , '23/08/2024' , 450.00),
--(62 , 520 , '06/09/2024' , 200.00),
--(63 , 530 , '19/09/2024' , 220.00),
--(64 , 540 , '29/09/2024' , 45.00),
--(65 , 550 , '03/10/2024' , 300.00);
--create table pix(
--Id_pix int not null,
--Cd_Pagamento int not null,
--Nome varchar(50) not null,
--Chave varchar(50) not null,
--primary key(Id_pix),
--foreign key(Cd_Pagamento) references pagamento(Cd_Pagamento)
--);
--insert into pix (Id_pix, Cd_Pagamento, Nome, Chave)
--values
--(60 , 50 , 'Marcelo Azevêdo da Silva'    , '321.456.987-64'),
--(61 , 51 , 'Filipe Pereira dos Santos'   , '213.565.213-32'),
--(62 , 52 , 'Andrade Santos de Oliveira'  , '432.132.321-43'),
--(63 , 53 , 'Cyrillo Cavalcanti dos Reis' , '654.432.236-78'),
--(64 , 54 , 'José Santos Lima'            , '412.543.234-54'),
--(65 , 55 , 'João Victor Almeida'         , '654.765.876-34');
--create table cartao(
--Id_Cartao int not null,
--Cd_Pagamento int not null,
--Nr_Cartao varchar(16) not null check (len(Nr_Cartao) = 16),
--Cd_seguranca char(3) not null check (len(Cd_seguranca) = 3),
--Nome varchar(50) not null,
--Validade date not null,
--Nr_Parcela int not null default 1,
--primary key(Id_Cartao),
--foreign key(Cd_Pagamento) references pagamento(Cd_Pagamento)
--);
--insert into cartao (Id_Cartao, Cd_Pagamento, Nr_Cartao, Cd_seguranca, Nome, Validade, Nr_Parcela)
--values
--(70 , 50 , '3221213232433325' , '213' , 'Marcelo A. da Silva'      , '10/05/2027', 7), 
--(71 , 51 , '2314421226548453' , '654' , 'Filipe P. dos Santos'     , '23/01/2026', 3),
--(72 , 52 , '7876845332214355' , '764' , 'Andrade S. de Oliveira'   , '12/08/2028', 2), 
--(73 , 53 , '5654437684593456' , '433' , 'Cyrillo C. dos Reis'      , '07/04/2025', 1),
--(74 , 54 , '9834324603493275' , '932' , 'José S. Lima'             , '27/11/2028', 1),
--(75 , 55 , '1432432202312134' , '543' , 'João V. Almeida Ferreira' , '15/02/2025', 2);
--create table boleto(
--Id_boleto int not null,
--Cd_Pagamento int not null,
--Cd_digitavel char(47) not null,
--primary key(Id_boleto),
--foreign key(Cd_Pagamento) references pagamento(Cd_Pagamento)
--);
--insert into boleto (Id_boleto, Cd_Pagamento, Cd_Digitavel)
--values
--(80 , 50 , '31415926535897932384626433832795028841971693993'),
--(81 , 51 , '98765432101234567890345678901234567890345654657'),
--(82 , 52 , '23456789012345678900123456789098765432100324344'),
--(83 , 53 , '34278529148253769812043568729413562847219258232'),
--(84 , 54 , '16180339887498948482045800498920279729630456787'),
--(85 , 55 , '82394713562984138651379226414530278952618349345');
--create table Categoria(
--Cd_Categoria int not null,
--Descricao varchar(50),
--primary key(Cd_Categoria)
--);
--insert into Categoria (Cd_Categoria, Descricao)
--values
--(20 , 'Eletrônicos'),
--(21 , 'Móveis'),
--(22 , 'Esportes'),
--(23 , 'Ferramentas'),
--(24 , 'Alimentos'),
--(25 , 'Roupas');
--create table Produto(
--Id_Produto int not null,
--Cd_Categoria int not null,
--Nome varchar(50) not null,
--Descricao varchar(100),
--primary key(Id_Produto),
--foreign key(Cd_Categoria) references Categoria(Cd_Categoria)
--);
--insert into produto (Id_Produto, Cd_Categoria, Nome, Descricao)
--values
--(30 , 20 , 'iPhone'             , ' Apple iPhone 15 com (128 GB)-Branco'),
--(31 , 21 , 'Mesa Gamer'         , 'Mesa gamer com iluminação Rgb'),
--(32 , 22 , 'Tênis Esportivo'    , 'Tênis esportivo para academia leve e macio'),
--(33 , 23 , 'Kit de Ferramentas' , 'Kit de ferramentas com 129 peças com maleta'),
--(34 , 24 , 'Biscoito Oreo'      , 'Biscoito oreo recheado caixa com 8 unidadesde de 36g'),
--(35 , 25 , 'Kit de Camisas'     , 'Kit com 5 camisas masculinas com 100% algodão');
--create table Fornecedor(
--Id_Fornecedor int not null,
--CNPJ char(14) unique not null,
--Nome varchar(50) not null,
--Telefone char(11) unique not null,
--Endereco varchar(50) not null,
--Email varchar(50) unique not null,
--primary key(Id_Fornecedor)
--);
--insert into Fornecedor (Id_Fornecedor, CNPJ, Nome, Telefone, Endereco, Email)
--values
--(90 , '12345678000190' , 'Apple Store'        , '987654471' , 'São Paulo'      , 'apple.store@email.com'), 
--(91 , '98765432000101' , 'Móveis & Design'    , '981234567' , 'Amazonas'       , 'moveis.design@email.com'),
--(92 , '22334445000178' , 'Sport Shoes'        , '992345678' , 'Goias'          , 'sport.shoes@email.com'), 
--(93 , '33445556000123' , 'Ferramentas Brasil' , '998775432' , 'Paraná'         , 'ferramentas.brasil@email.com'), 
--(94 , '44556667000134' , 'Fábrica Oreo'       , '998768729' , 'Pernambuco'     , 'FábricaOreo@email.com'),
--(95 , '55667778000145' , 'Camisas e Estilo'   , '987654321' , 'Rio de Janeiro' , 'CamisaseEstilo@email.com');
----------------------------------------------------------
--select * from cliente
--select * from NFC
--select * from pagamento
--select * from pix
--select * from cartao
--select * from boleto
--select * from Categoria
--select * from Produto
--select * from Fornecedor
----------------------------------------------------------
--SELECT 
--    c.Nome AS "Nome do Cliente", 
--    COUNT(n.Id_NFC) AS "Total de Compras", 
--    SUM(p.Valor) AS "Total Gasto"
--FROM 
--    cliente AS c
--JOIN 
--    NFC AS n ON c.Id_cliente = n.Id_cliente
--JOIN 
--    pagamento AS p ON n.Id_NFC = p.Id_NFC
--GROUP BY 
--    c.Nome;
----------------------------------------------------------
--SELECT 
--    c.Nome AS "Nome do Cliente", 
--    ROUND(AVG(p.Valor), 1) AS "Valor Médio Gasto", 
--    MAX(p.Valor) AS "Maior Valor Gasto", 
--    MIN(p.Valor) AS "Menor Valor Gasto"
--FROM 
--    cliente AS c
--JOIN 
--    NFC AS n ON c.Id_cliente = n.Id_cliente
--JOIN 
--    pagamento AS p ON n.Id_NFC = p.Id_NFC
--GROUP BY 
--    c.Nome;
----------------------------------------------------------
--SELECT 
--    SUM(p.Valor) AS "Valor Total Gasto por Todos os Clientes"
--FROM 
--    pagamento AS p;
----------------------------------------------------------

--TRIGGER--


---- Adicionando a coluna para armazenar a data e hora da última modificação
--ALTER TABLE Produto
--ADD UltimaModificacao DATETIME;
--GO

---- Criando a trigger para atualizar a coluna UltimaModificacao
--CREATE TRIGGER AtualizaProdutoModificacao
--ON Produto
--AFTER UPDATE
--AS
--BEGIN
--    -- Atualiza a data e hora de modificação
--    UPDATE Produto
--    SET UltimaModificacao = GETDATE()
--    WHERE Id_Produto IN (SELECT Id_Produto FROM inserted);
--END;
--GO


--UPDATE Produto
--SET Nome = 'NomeTest'
--WHERE Id_Produto = 30;

--SELECT * FROM Produto WHERE Id_Produto = 30;


--FUNCTION--


--CREATE FUNCTION TotalGastoCliente(@IdCliente INT)
--RETURNS MONEY
--AS
--BEGIN
--    DECLARE @TotalGasto MONEY;

--    -- Calcula o total gasto pelo cliente
--    SELECT @TotalGasto = SUM(p.Valor)
--    FROM NFC AS n
--    JOIN Pagamento AS p ON n.Id_NFC = p.Id_NFC
--    WHERE n.Id_Cliente = @IdCliente;

--    RETURN @TotalGasto;
--END;
--GO

--select * from cliente
--select * from NFC
--select * from pagamento
--select * from pix
--select * from cartao
--select * from boleto
--select * from Categoria
--select * from Produto
--select * from Fornecedor

--SELECT dbo.TotalGastoCliente(100) AS TotalGasto;
--SELECT dbo.TotalGastoCliente(110) AS TotalGasto;
--SELECT dbo.TotalGastoCliente(120) AS TotalGasto;


--INDEX--


--CREATE INDEX IDX_Valor_Pagamento
--ON Pagamento (Valor);

--SELECT *
--FROM Pagamento
--WHERE Valor > 1000;

--Verificação dos indexes:
--EXEC sp_helpindex 'Pagamento';


